{"ast":null,"code":"var _jsxFileName = \"/Users/bigbrother/Desktop/coda-project/src/components/Device.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Button from \"@mui/material/Button\";\nimport { getAllDeviceEvents } from \"../reducers\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { generatePath, Link as RouterLink } from \"react-router-dom\";\nimport { fetchDeviceEvents, fetchFields } from \"../reducers\";\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\nimport Divider from '@mui/material/Divider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Device() {\n  _s();\n\n  const EVENT_PAGE_PATH = \"/event-:id\";\n  const events = useSelector(getAllDeviceEvents);\n  const dispatch = useDispatch();\n  React.useEffect(\n  /**\n   * Mock api call to get device events\n   */\n  () => {\n    dispatch(fetchDeviceEvents());\n  }, [dispatch]);\n  React.useEffect(\n  /**\n   * Mock API call to get field data\n   */\n  () => {\n    dispatch(fetchFields());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: events.map(event => {\n      var _event$pressure, _event$reel;\n\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            minWidth: 275,\n            maxWidth: 300,\n            flexDirection: \"column\",\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Device Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"deviceTitle\",\n            children: event.device_alias\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            className: \"dividerHr\",\n            variant: \"middle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Stack, {\n            sx: {\n              padding: \"10px\"\n            },\n            direction: \"row\",\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              children: (_event$pressure = event.pressure) === null || _event$pressure === void 0 ? void 0 : _event$pressure.state_current\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n              children: (_event$reel = event.reel) === null || _event$reel === void 0 ? void 0 : _event$reel.state_current\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              component: RouterLink,\n              to: generatePath(EVENT_PAGE_PATH, {\n                id: event.id\n              }),\n              size: \"small\",\n              variant: \"contained\",\n              children: \"More Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }, this)]\n        }, event.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n    })\n  }, void 0, false);\n}\n\n_s(Device, \"1JFFZ78LUPIwqhS7ZIKUYkDXKJs=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Device;\nexport default Device;\n\nvar _c;\n\n$RefreshReg$(_c, \"Device\");","map":{"version":3,"sources":["/Users/bigbrother/Desktop/coda-project/src/components/Device.tsx"],"names":["React","Card","CardActions","Button","getAllDeviceEvents","useSelector","useDispatch","generatePath","Link","RouterLink","fetchDeviceEvents","fetchFields","Avatar","Stack","Divider","Device","EVENT_PAGE_PATH","events","dispatch","useEffect","map","event","minWidth","maxWidth","flexDirection","display","alignItems","device_alias","padding","pressure","state_current","reel","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,kBAAT,QAAmC,aAAnC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,YAAT,EAAuBC,IAAI,IAAIC,UAA/B,QAAwD,kBAAxD;AACA,SAAuBC,iBAAvB,EAA0CC,WAA1C,QAA6D,aAA7D;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;;AAMA,SAASC,MAAT,GAA8B;AAAA;;AAC5B,QAAMC,eAAe,GAAG,YAAxB;AACA,QAAMC,MAAM,GAAGZ,WAAW,CAACD,kBAAD,CAA1B;AAEA,QAAMc,QAAQ,GAAGZ,WAAW,EAA5B;AACAN,EAAAA,KAAK,CAACmB,SAAN;AACE;AACJ;AACA;AACI,QAAM;AACJD,IAAAA,QAAQ,CAACR,iBAAiB,EAAlB,CAAR;AACD,GANH,EAOE,CAACQ,QAAD,CAPF;AASAlB,EAAAA,KAAK,CAACmB,SAAN;AACE;AACJ;AACA;AACI,QAAY;AACVD,IAAAA,QAAQ,CAACP,WAAW,EAAZ,CAAR;AACD,GANH,EAOE,CAACO,QAAD,CAPF;AASA,sBACE;AAAA,cACGD,MAAM,CAACG,GAAP,CAAYC,KAAD;AAAA;;AAAA,0BACV;AAAA,+BACA,QAAC,IAAD;AAAqB,UAAA,EAAE,EAAE;AACvBC,YAAAA,QAAQ,EAAE,GADa;AAEvBC,YAAAA,QAAQ,EAAE,GAFa;AAERC,YAAAA,aAAa,EAAC,QAFN;AAGvBC,YAAAA,OAAO,EAAE,MAHc;AAGPC,YAAAA,UAAU,EAAC;AAHJ,WAAzB;AAAA,kCAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAI,YAAA,SAAS,EAAC,aAAd;AAAA,sBAA6BL,KAAK,CAACM;AAAnC;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE,QAAC,OAAD;AAAS,YAAA,SAAS,EAAC,WAAnB;AAA+B,YAAA,OAAO,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,kBAPF,eAQE,QAAC,KAAD;AAAO,YAAA,EAAE,EAAE;AAACC,cAAAA,OAAO,EAAC;AAAT,aAAX;AAA4B,YAAA,SAAS,EAAC,KAAtC;AAA4C,YAAA,OAAO,EAAE,CAArD;AAAA,oCACJ,QAAC,MAAD;AAAA,2CAASP,KAAK,CAACQ,QAAf,oDAAS,gBAAgBC;AAAzB;AAAA;AAAA;AAAA;AAAA,oBADI,eAEJ,QAAC,MAAD;AAAA,uCAAST,KAAK,CAACU,IAAf,gDAAS,YAAYD;AAArB;AAAA;AAAA;AAAA;AAAA,oBAFI;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eAYE,QAAC,WAAD;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,SAAS,EAAErB,UADb;AAEE,cAAA,EAAE,EAAEF,YAAY,CAACS,eAAD,EAAkB;AAAEgB,gBAAAA,EAAE,EAAEX,KAAK,CAACW;AAAZ,eAAlB,CAFlB;AAGE,cAAA,IAAI,EAAC,OAHP;AAIE,cAAA,OAAO,EAAC,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA,WAAWX,KAAK,CAACW,EAAjB;AAAA;AAAA;AAAA;AAAA;AADA,uBADU;AAAA,KAAX;AADH,mBADF;AA+BD;;GAtDQjB,M;UAEQV,W,EAEEC,W;;;KAJVS,M;AAwDT,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Button from \"@mui/material/Button\";\nimport { getAllDeviceEvents } from \"../reducers\";\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { generatePath, Link as RouterLink, Route } from \"react-router-dom\";\nimport { deviceEvents, fetchDeviceEvents, fetchFields } from \"../reducers\";\nimport Avatar from '@mui/material/Avatar';\nimport Stack from '@mui/material/Stack';\nimport Divider from '@mui/material/Divider';\nimport { motion } from \"framer-motion\";\n\n\n\n\nfunction Device(): JSX.Element{\n  const EVENT_PAGE_PATH = \"/event-:id\";\n  const events = useSelector(getAllDeviceEvents);\n\n  const dispatch = useDispatch();\n  React.useEffect(\n    /**\n     * Mock api call to get device events\n     */\n    () => {\n      dispatch(fetchDeviceEvents());\n    },\n    [dispatch]\n  );\n  React.useEffect(\n    /**\n     * Mock API call to get field data\n     */\n    (): void => {\n      dispatch(fetchFields());\n    },\n    [dispatch]\n  );\n  return (\n    <>\n      {events.map((event) => (\n        <>\n        <Card key={event.id} sx={{ \n          minWidth: 275, \n          maxWidth: 300, flexDirection:\"column\",\n          display: \"flex\",alignItems:\"center\" \n          }}>\n          <span>Device Name:</span>\n          <h1 className=\"deviceTitle\">{event.device_alias}</h1>\n          <Divider className=\"dividerHr\" variant=\"middle\" />\n          <Stack sx={{padding:\"10px\"}}direction=\"row\" spacing={2}>\n      <Avatar>{event.pressure?.state_current}</Avatar>\n      <Avatar>{event.reel?.state_current}</Avatar>\n    </Stack>\n          <CardActions>\n            <Button\n              component={RouterLink}\n              to={generatePath(EVENT_PAGE_PATH, { id: event.id })}\n              size=\"small\"\n              variant=\"contained\"\n            >\n              More Details\n            </Button>\n          </CardActions>\n        </Card>\n        </>\n      ))}\n      </>\n  );\n}\n\nexport default Device;\n"]},"metadata":{},"sourceType":"module"}