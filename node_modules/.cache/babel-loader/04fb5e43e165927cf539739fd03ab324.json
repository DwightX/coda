{"ast":null,"code":"var _jsxFileName = \"/Users/bigbrother/Desktop/coda-project/src/components/DeviceReels.tsx\",\n    _s = $RefreshSig$();\n\nimport { fetchDeviceEvents, getAllDeviceEvents } from \"../reducers\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction DeviceReels({\n  eventId\n}) {\n  _s();\n\n  var _eventDetails$reel, _eventDetails$reel2;\n\n  const dispatch = useDispatch();\n  React.useEffect(\n  /**\n   * Mock api call to get device events\n   */\n  () => {\n    dispatch(fetchDeviceEvents());\n  }, [dispatch]); // TODO: Improve this view\n\n  const events = useSelector(getAllDeviceEvents);\n  const eventDetails = events === null || events === void 0 ? void 0 : events.find(event => {\n    var _event$id;\n\n    return (event === null || event === void 0 ? void 0 : (_event$id = event.id) === null || _event$id === void 0 ? void 0 : _event$id.toString()) === eventId;\n  });\n  let hasReel = eventDetails === null || eventDetails === void 0 ? void 0 : (_eventDetails$reel = eventDetails.reel) === null || _eventDetails$reel === void 0 ? void 0 : _eventDetails$reel.state_current;\n  let reelPressure = eventDetails === null || eventDetails === void 0 ? void 0 : (_eventDetails$reel2 = eventDetails.reel) === null || _eventDetails$reel2 === void 0 ? void 0 : _eventDetails$reel2.run_speed_mmpm;\n  console.log(reelPressure); // works in this component\n  //   let hasTime = eventDetails?.event_timestamp;\n  //   let str = hasTime;\n  //   let date = moment(str);\n\n  let reelInformation;\n\n  if (hasReel === \"RS\") {\n    reelInformation = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Reel Stopped + \", reelPressure]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 23\n    }, this);\n  } else if (hasReel === \"RR\") {\n    reelInformation = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Reel Retracting (pulling in and spraying water) \", reelPressure]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 23\n    }, this);\n  } else if (hasReel === \"RE\") {\n    reelInformation = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Reel Extending (being towed out by a tractor)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: reelInformation\n  }, void 0, false);\n}\n\n_s(DeviceReels, \"fwBMYe0JcMhIjkCgbEA6qGodrQQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DeviceReels;\nexport default DeviceReels;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeviceReels\");","map":{"version":3,"sources":["/Users/bigbrother/Desktop/coda-project/src/components/DeviceReels.tsx"],"names":["fetchDeviceEvents","getAllDeviceEvents","useDispatch","useSelector","React","DeviceReels","eventId","dispatch","useEffect","events","eventDetails","find","event","id","toString","hasReel","reel","state_current","reelPressure","run_speed_mmpm","console","log","reelInformation"],"mappings":";;;AAAA,SAASA,iBAAT,EAA4BC,kBAA5B,QAAsD,aAAtD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAoE;AAAA;;AAAA;;AAClE,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACAE,EAAAA,KAAK,CAACI,SAAN;AACE;AACJ;AACA;AACI,QAAM;AACJD,IAAAA,QAAQ,CAACP,iBAAiB,EAAlB,CAAR;AACD,GANH,EAOE,CAACO,QAAD,CAPF,EAFkE,CAYlE;;AACA,QAAME,MAAqB,GAAGN,WAAW,CAACF,kBAAD,CAAzC;AACA,QAAMS,YAAqC,GAAGD,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEE,IAAR,CAAcC,KAAD,IAAW;AAAA;;AACpE,WAAO,CAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,yBAAAA,KAAK,CAAEC,EAAP,wDAAWC,QAAX,QAA0BR,OAAjC;AACD,GAF6C,CAA9C;AAGA,MAAIS,OAAO,GAAGL,YAAH,aAAGA,YAAH,6CAAGA,YAAY,CAAEM,IAAjB,uDAAG,mBAAoBC,aAAlC;AACA,MAAIC,YAAY,GAAGR,YAAH,aAAGA,YAAH,8CAAGA,YAAY,CAAEM,IAAjB,wDAAG,oBAAoBG,cAAvC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ,EAnBkE,CAqBlE;AACA;AACA;AACA;;AAEA,MAAII,eAAJ;;AACA,MAAIP,OAAO,KAAK,IAAhB,EAAsB;AACpBO,IAAAA,eAAe,gBAAG;AAAA,oCAAmBJ,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAlB;AACD,GAFD,MAEO,IAAIH,OAAO,KAAK,IAAhB,EAAsB;AAC3BO,IAAAA,eAAe,gBAAG;AAAA,qEAAoDJ,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA,YAAlB;AACD,GAFM,MAEA,IAAIH,OAAO,KAAK,IAAhB,EAAsB;AAC3BO,IAAAA,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAlB;AACD;;AACD,sBAAO;AAAA,cAAGA;AAAH,mBAAP;AACD;;GAnCQjB,W;UACUH,W,EAYaC,W;;;KAbvBE,W;AAqCT,eAAeA,WAAf","sourcesContent":["import { fetchDeviceEvents, getAllDeviceEvents } from \"../reducers\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { DeviceEvent } from \"../types\";\nimport React from \"react\";\n\nfunction DeviceReels({ eventId }: { eventId: string }): JSX.Element {\n  const dispatch = useDispatch();\n  React.useEffect(\n    /**\n     * Mock api call to get device events\n     */\n    () => {\n      dispatch(fetchDeviceEvents());\n    },\n    [dispatch]\n  );\n\n  // TODO: Improve this view\n  const events: DeviceEvent[] = useSelector(getAllDeviceEvents);\n  const eventDetails: DeviceEvent | undefined = events?.find((event) => {\n    return event?.id?.toString() === eventId;\n  });\n  let hasReel = eventDetails?.reel?.state_current;\n  let reelPressure = eventDetails?.reel?.run_speed_mmpm;\n  console.log(reelPressure)\n\n  // works in this component\n  //   let hasTime = eventDetails?.event_timestamp;\n  //   let str = hasTime;\n  //   let date = moment(str);\n\n  let reelInformation;\n  if (hasReel === \"RS\") {\n    reelInformation = <p>Reel Stopped + {reelPressure}</p>;\n  } else if (hasReel === \"RR\") {\n    reelInformation = <p>Reel Retracting (pulling in and spraying water) {reelPressure}</p>;\n  } else if (hasReel === \"RE\") {\n    reelInformation = <p>Reel Extending (being towed out by a tractor)</p>;\n  }\n  return <>{reelInformation}</>;\n}\n\nexport default DeviceReels;\n"]},"metadata":{},"sourceType":"module"}